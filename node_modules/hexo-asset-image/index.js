'use strict';
var cheerio = require('cheerio');

hexo.extend.filter.register('after_post_render', function(data){
  var config = hexo.config;
  if(config.post_asset_folder){
    var permalink = data.permalink;
    
    // Extract the relative path from the permalink
    var postPath = permalink;
    if (config.url && postPath.startsWith(config.url)) {
      postPath = postPath.substring(config.url.length);
    }
    
    // Remove leading slash and trailing slash/extension
    postPath = postPath.replace(/^\/+/, '').replace(/\/$/, '').replace(/\.html$/, '');

    var toprocess = ['excerpt', 'more', 'content'];
    for(var i = 0; i < toprocess.length; i++){
      var key = toprocess[i];

      var $ = cheerio.load(data[key], {
        ignoreWhitespace: false,
        xmlMode: false,
        lowerCaseTags: false,
        decodeEntities: false
      });

      $('img').each(function(){
        var src = $(this).attr('src');
        if (src){
          // Normalize path separators
          src = src.replace(/\\/g, '/');
          
          // Skip absolute URLs and paths that start with /
          if(!(/^https?:\/\//.test(src) || /^\//.test(src))) {
            // Build the asset path: /postPath/imageName
            var assetPath = '/' + postPath + '/' + src;
            $(this).attr('src', assetPath);
          }
        }
      });
      data[key] = $.html();
    }
  }
});
